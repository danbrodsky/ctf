from textwrap import wrap

inp

out = []

s_out = b""

order = [5,6,7,4,5,6,7,4]
order = [2,1,0,3,6,5,4,7]

data = open("./tap.gpio", "r").read().split('\n')

acc = 0
h = 0
decoded = ["x"] * 200
next_pos = 0
for b in data:
    if acc % 2 == 0:
        out.append(b)
        if b == "CHARACTER":
            h = 1
    else:
        curr = ["x"] * 8
        curr[2] = b[0]
        curr[1] = b[1]
        curr[0] = b[2]
        curr[3] = b[3]
        curr[6] = b[4]
        curr[5] = b[5]
        curr[4] = b[6]
        curr[7] = b[7]
        curr = ''.join(curr)
        n = int('0b'+curr, 2)
        if h:
            c = n.to_bytes((n.bit_length() + 7) // 8, 'big').decode("ascii")
            decoded[next_pos] = c
            next_pos += 1
            out.append(c)
            h = 0
        else:
            # value of command
            out.append(hex(n))
            if n >= 0x80:
                next_pos = n - 0x80

    acc += 1

print("\n".join(out))
print("\n".join(wrap("".join(decoded),16)))
