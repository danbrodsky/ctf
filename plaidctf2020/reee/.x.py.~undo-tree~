"ae80ee713d2c51d3c702ef3655d75c24016a060b"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((apply -4 2407 2512 undo--wrap-and-run-primitive-undo 2407 2512 ((2485 . 2487) (2407 . 2409) 2431)) (t 24225 13528 569268 577000)) nil (24225 13580 224944 686000) 0 nil]) ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 572) (undo-tree-id825 . 1)) nil (24225 13528 558304 779000) 0 nil]) ((#("," 0 1 (fontified t ws-butler-chg delete)) . 572) (undo-tree-id826 . 1)) nil (24225 13528 558310 228000) 0 nil]) ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 572) (undo-tree-id827 . 1)) nil (24225 13528 558312 554000) 0 nil]) ((#("#" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face)) . 572) (undo-tree-id828 . 1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1)) nil (24225 13528 558324 581000) 0 nil]) ((571 . 572) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -571) (undo-tree-id845 . 1) (undo-tree-id846 . -1) 537) nil (24225 13528 558327 656000) 0 nil] [nil nil ((615 . 616) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -615) (undo-tree-id817 . -1) 614) ((nil ws-butler-chg delete 616 . 617) (615 . 616) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 615)) (24225 13522 2310 272000) 0 nil]) ((570 . 571)) nil (24225 13522 2723 955000) 0 nil]) ((#("
" 0 1 (fontified t)) . -570) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (#(")" 0 1 (fontified t)) . -571) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . 1) (undo-tree-id824 . -1) 572 (t 24225 12296 964941 159000)) nil (24225 13522 2324 794000) 0 nil]) ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 1091) (undo-tree-id746 . -1) (undo-tree-id747 . -1)) nil (24225 12296 952083 327000) 0 nil]) ((#("init_state.unicorn.concretization_
" 0 34 (fontified t) 34 35 (fontified t)) . 1091) (undo-tree-id748 . -34) (undo-tree-id749 . -34) (undo-tree-id750 . -34) (undo-tree-id751 . -34) (undo-tree-id752 . -33) (undo-tree-id753 . -33) (undo-tree-id754 . -33) (undo-tree-id755 . -33) (undo-tree-id756 . -33) (undo-tree-id757 . -33) (undo-tree-id758 . -33) (undo-tree-id759 . -33) (undo-tree-id760 . -33) (undo-tree-id761 . -33) (undo-tree-id762 . -33) (undo-tree-id763 . -33) (undo-tree-id764 . -33) (undo-tree-id765 . -33) (undo-tree-id766 . -33) (undo-tree-id767 . -33) (undo-tree-id768 . -33) (undo-tree-id769 . -33) (undo-tree-id770 . -33) (undo-tree-id771 . -33) (undo-tree-id772 . -33) (undo-tree-id773 . -33) (undo-tree-id774 . -27) (undo-tree-id775 . -27) (undo-tree-id776 . -33) (undo-tree-id777 . -33) (undo-tree-id778 . -35) (undo-tree-id779 . -35) (undo-tree-id780 . -35) (undo-tree-id781 . -35) (undo-tree-id782 . -35) (undo-tree-id783 . -35) (undo-tree-id784 . -35) (undo-tree-id785 . -35) (undo-tree-id786 . -27) (undo-tree-id787 . -35) (undo-tree-id788 . -27) (undo-tree-id789 . -27) (undo-tree-id790 . -27) (undo-tree-id791 . -27) (undo-tree-id792 . -27) (undo-tree-id793 . -27) (undo-tree-id794 . -35) (undo-tree-id795 . -35) (undo-tree-id796 . -27) (undo-tree-id797 . -27) (undo-tree-id798 . -27) (undo-tree-id799 . -27) (undo-tree-id800 . -27) (undo-tree-id801 . -27) (undo-tree-id802 . -27) (undo-tree-id803 . -27) (undo-tree-id804 . -27) (undo-tree-id805 . -27) (undo-tree-id806 . -27) (undo-tree-id807 . -27) (undo-tree-id808 . -27) (undo-tree-id809 . -27) (undo-tree-id810 . -27) (undo-tree-id811 . -27) (undo-tree-id812 . -27) (undo-tree-id813 . -27) (undo-tree-id814 . -27) (undo-tree-id815 . -27) (undo-tree-id816 . -27) 1118 (t 24225 12294 314931 249000)) nil (24225 12296 952131 903000) 0 nil]) ((1151 . 1155)) nil (24225 12294 299946 47000) 0 nil]) ((#("." 0 1 (fontified t ws-butler-chg chg)) . -1151) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1152) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1153) (undo-tree-id744 . -1) (undo-tree-id745 . -1) 1154) nil (24225 12294 299969 327000) 0 nil]) ((1150 . 1154) (t 24225 12286 764903 15000)) nil (24225 12294 299973 546000) 0 nil]) ((1127 . 1137) (#("init_state" 0 10 (fontified nil ws-butler-chg chg)) . 1127) (1127 . 1137) (#("init" 0 4 (fontified t ws-butler-chg chg)) . -1127) (undo-tree-id584 . -4) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -1) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -2) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -3) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) 1131) nil (24225 12286 750285 352000) 0 nil]) ((1127 . 1131)) nil (24225 12286 750292 931000) 0 nil]) ((#("pn" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t ws-butler-chg chg)) . 1127)) nil (24225 12286 750294 462000) 0 nil]) ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -1127) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) 1131) nil (24225 12286 750323 694000) 0 nil]) ((#("        " 0 7 (fontified nil ws-butler-chg chg) 7 8 (fontified nil ws-butler-chg chg rear-nonsticky t)) . -1131) (undo-tree-id701 . -8) (undo-tree-id702 . -8) (undo-tree-id703 . -8) (undo-tree-id704 . -8) (undo-tree-id705 . -8) (undo-tree-id706 . -8) (undo-tree-id707 . -8) (undo-tree-id708 . -8) (undo-tree-id709 . -8) (undo-tree-id710 . -8) (undo-tree-id711 . -8) (undo-tree-id712 . -8) (undo-tree-id713 . -8) (undo-tree-id714 . -8) (undo-tree-id715 . -8) (undo-tree-id716 . -8) (undo-tree-id717 . -8) (undo-tree-id718 . -8) (undo-tree-id719 . -8) (undo-tree-id720 . -8) (undo-tree-id721 . -8) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (undo-tree-id724 . -8) (undo-tree-id725 . -8) (undo-tree-id726 . -8) (undo-tree-id727 . -8) (undo-tree-id728 . -8) (undo-tree-id729 . -8) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (1127 . 1131) 1135) nil (24225 12286 750349 483000) 0 nil]) ((nil rear-nonsticky nil 1134 . 1135) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -1196) (1126 . 1197)) nil (24225 12286 750351 961000) 0 nil]) ((1125 . 1126) 1124) nil (24225 12286 750352 922000) 0 nil] [nil nil ((1125 . 1127)) ((#(" ." 0 2 (fontified t ws-butler-chg chg)) . 1125) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1)) (24225 11130 621834 161000) 0 nil]) ((1124 . 1125)) nil (24225 11130 622259 486000) 0 nil]) ((1122 . 1124)) nil (24225 11130 621840 108000) 0 nil]) ((1101 . 1122)) nil (24225 11130 621840 954000) 0 nil]) ((1091 . 1101) (#("init_state" 0 10 (fontified nil ws-butler-chg chg)) . 1091) (1091 . 1101) (#("init" 0 4 (fontified t ws-butler-chg chg)) . -1091) (undo-tree-id579 . -4) 1095) nil (24225 11130 621850 437000) 0 nil]) ((1091 . 1095)) nil (24225 11130 621852 189000) 0 nil]) ((1090 . 1091) (t 24225 10194 787027 31000) 1089) nil (24225 11130 621853 147000) 0 nil]) ((apply 2 1500 1552 undo--wrap-and-run-primitive-undo 1500 1552 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1500) 1527)) (t 24225 10128 820115 395000)) nil (24225 10194 773673 953000) 0 nil]) ((2198 . 2200)) nil (24225 10128 810284 698000) 0 nil]) ((#("cb" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t)) . 2198) (undo-tree-id513 . 2) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1)) nil (24225 10128 810301 875000) 0 nil]) ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -2198) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg)) . -2199) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) 2200) nil (24225 10128 810346 929000) 0 nil]) ((2198 . 2200)) nil (24225 10128 810351 88000) 0 nil]) ((2222 . 2224)) nil (24225 10128 810352 33000) 0 nil]) ((#("82" 0 2 (fontified t)) . 2222) (undo-tree-id575 . 1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (t 24225 10096 109993 764000)) nil (24225 10128 810356 445000) 0 nil]) ((2198 . 2200)) nil (24225 10096 99659 913000) 0 nil]) ((#("8b" 0 1 (fontified t) 1 2 (fontified t)) . 2198) (undo-tree-id512 . 1) (t 24225 10030 959751 178000)) nil (24225 10096 99672 827000) 0 nil]) ((2221 . 2224)) nil (24225 10030 946628 298000) 0 nil]) ((#("763" 0 3 (fontified t)) . 2221) (undo-tree-id504 . 2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1)) nil (24225 10030 946650 48000) 0 nil]) ((2199 . 2200) (#("5" 0 1 (fontified t ws-butler-chg chg)) . 2199)) nil (24225 10030 946653 248000) 0 nil]) ((2197 . 2200)) nil (24225 10030 946654 695000) 0 nil]) ((#("7ce" 0 3 (fontified t)) . 2197) (undo-tree-id511 . 2) (t 24225 9870 35816 750000)) nil (24225 10030 946656 912000) 0 nil]) ((2516 . 2518)) nil (24225 9870 21070 943000) 0 nil]) ((#("4e" 0 2 (fontified t)) . 2516) (undo-tree-id503 . 1) (t 24224 63535 941661 343000)) nil (24225 9870 21087 179000) 0 nil]) ((apply -2 1500 1554 undo--wrap-and-run-primitive-undo 1500 1554 ((1500 . 1502)))) nil (24224 63535 934154 580000) 0 nil]) ((apply -2 131 188 undo--wrap-and-run-primitive-undo 131 188 ((131 . 133) 169)) (t 24224 57861 318106 698000)) nil (24224 63535 934159 114000) 0 nil]) ((nil rear-nonsticky nil 130 . 131) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -186) (130 . 187)) nil (24224 57861 311940 611000) 0 nil]) ((#("logging.getLogger(\"angr.sim_manager\").setLevel(\"DEBUG\")
" 0 18 (fontified t) 18 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 30 (fontified t face font-lock-string-face) 30 36 (fontified t face font-lock-string-face) 36 40 (fontified t) 40 47 (fontified t) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 54 (fontified t face font-lock-string-face) 54 55 (fontified t) 55 56 (fontified t)) . 1442) (undo-tree-id475 . -55) (undo-tree-id476 . -56) (undo-tree-id477 . -56) (undo-tree-id478 . -56) (undo-tree-id479 . -56) (undo-tree-id480 . -56) (undo-tree-id481 . -56) (undo-tree-id482 . -56) (undo-tree-id483 . -56) (undo-tree-id484 . -56) (undo-tree-id485 . -56) (undo-tree-id486 . -56) (undo-tree-id487 . -56) (undo-tree-id488 . -56) (undo-tree-id489 . -56) (undo-tree-id490 . -56) (undo-tree-id491 . -56) (undo-tree-id492 . -56) (undo-tree-id493 . -56) (undo-tree-id494 . -56) (undo-tree-id495 . -56) (undo-tree-id496 . -56) (undo-tree-id497 . -56) (undo-tree-id498 . -56) (undo-tree-id499 . -56) (undo-tree-id500 . -56) (undo-tree-id501 . -7) (undo-tree-id502 . -56) (t 24224 57842 38063 167000)) nil (24224 57861 311979 113000) 0 nil]) ((nil rear-nonsticky nil 1441 . 1442) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -1497) (1441 . 1498)) nil (24224 57842 25160 147000) 0 nil]) ((#("logging.getLogger(\"angr.sim_manager\").setLevel(\"DEBUG\")
" 0 18 (fontified t) 18 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 30 (fontified t face font-lock-string-face) 30 36 (fontified t face font-lock-string-face) 36 40 (fontified t) 40 47 (fontified t) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 54 (fontified t face font-lock-string-face) 54 56 (fontified t)) . 1788) (undo-tree-id444 . -56) (undo-tree-id445 . -56) (undo-tree-id446 . -56) (undo-tree-id447 . -56) (undo-tree-id448 . -56) (undo-tree-id449 . -56) (undo-tree-id450 . -56) (undo-tree-id451 . -56) (undo-tree-id452 . -56) (undo-tree-id453 . -56) (undo-tree-id454 . -56) (undo-tree-id455 . -56) (undo-tree-id456 . -56) (undo-tree-id457 . -56) (undo-tree-id458 . -56) (undo-tree-id459 . -56) (undo-tree-id460 . -56) (undo-tree-id461 . -56) (undo-tree-id462 . -56) (undo-tree-id463 . -56) (undo-tree-id464 . -56) (undo-tree-id465 . -56) (undo-tree-id466 . -56) (undo-tree-id467 . -56) (undo-tree-id468 . -56) (undo-tree-id469 . -56) (undo-tree-id470 . -56) (undo-tree-id471 . -56) (undo-tree-id472 . -56) (undo-tree-id473 . -7) (undo-tree-id474 . -56) (t 24224 57837 138052 87000)) nil (24224 57842 25192 21000) 0 nil]) ((apply -6 1628 1786 undo--wrap-and-run-primitive-undo 1628 1786 ((1733 . 1735) (1706 . 1708) (1628 . 1630) 1729)) (t 24224 57820 524681 202000)) nil (24224 57837 126788 655000) 0 nil] [nil ([nil nil ((#("sim.drop(stash=\"active\")
" 0 1 (fontified t ws-butler-chg delete) 1 15 (fontified t) 15 20 (fontified t face font-lock-string-face) 20 23 (fontified t face font-lock-string-face) 23 24 (fontified t) 24 25 (fontified t)) . 1628) (undo-tree-id409 . -25) (undo-tree-id410 . -25) (undo-tree-id411 . -25) (undo-tree-id412 . -25) (undo-tree-id413 . -25) (undo-tree-id414 . -25) (undo-tree-id415 . -25) (undo-tree-id416 . -25) (undo-tree-id417 . -25) (undo-tree-id418 . -25) (undo-tree-id419 . -25) (undo-tree-id420 . -25) (undo-tree-id421 . -25) (undo-tree-id422 . -25) (undo-tree-id423 . -25) (undo-tree-id424 . -24) (undo-tree-id425 . -24) (undo-tree-id426 . -24) (undo-tree-id427 . -3) (undo-tree-id428 . -25) (undo-tree-id429 . -25) (undo-tree-id430 . -25) (undo-tree-id431 . -25) (undo-tree-id432 . -25)) ((nil ws-butler-chg delete 1653 . 1654) (1628 . 1653)) (24224 57834 900524 137000) 0 nil]) ((#("sim.explore(find=0x40064E).unstash(from_stash=\"found\", to_stash=\"unpacked\")
" 0 46 (fontified t) 46 53 (fontified t face font-lock-string-face) 53 64 (fontified t) 64 69 (fontified t face font-lock-string-face) 69 74 (fontified t face font-lock-string-face) 74 76 (fontified t)) . 1628) (undo-tree-id433 . -76) (undo-tree-id434 . -3) (undo-tree-id435 . -76) (undo-tree-id436 . -76) (undo-tree-id437 . -76) (undo-tree-id438 . -76) (undo-tree-id439 . -76) (undo-tree-id440 . -76) (undo-tree-id441 . -76) (undo-tree-id442 . -76) (undo-tree-id443 . -76) (t 24224 57820 524681 202000)) ((nil ws-butler-chg delete 1704 . 1705) (1628 . 1704)) (24224 57834 901103 28000) 0 nil]) ((#("​
" 0 2 (fontified t)) . 2053) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -1) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2)) nil (24224 57835 27422 641000) 0 nil] [nil nil ((#("def debug_xor(state):
" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 13 (fontified t face font-lock-function-name-face) 13 21 (fontified t) 21 22 (fontified t)) . 2055) (undo-tree-id363 . -22) (undo-tree-id364 . -22) (undo-tree-id365 . -22) (undo-tree-id366 . -22) (undo-tree-id367 . -22) (undo-tree-id368 . -22) (undo-tree-id369 . -22) (undo-tree-id370 . -22) (undo-tree-id371 . -21)) ((nil ws-butler-chg delete 2077 . 2078) (2055 . 2077)) (24224 57819 9081 374000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2055) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (t 24224 57815 344669 481000)) nil (24224 57819 9351 88000) 0 nil]) ((#("​
" 0 2 (fontified t)) . 2174) (undo-tree-id361 . -2) (undo-tree-id362 . -1) (t 24224 57796 741294 24000)) nil (24224 57815 329903 139000) 0 nil]) ((2560 . 2561)) nil (24224 57796 724520 8000) 0 nil]) ((2587 . 2590)) nil (24224 57796 724524 720000) 0 nil]) ((#("}" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . 2588) (2587 . 2588) (2586 . 2588) (#("{" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . -2586) (2586 . 2587)) nil (24224 57796 724526 806000) 0 nil]) ((2575 . 2586)) nil (24224 57796 724528 442000) 0 nil]) ((2561 . 2575) (2560 . 2562) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -2560) (2560 . 2561) (2559 . 2561) (#("(" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . -2559) (2554 . 2560)) nil (24224 57796 724530 31000) 0 nil]) ((2547 . 2554) (2515 . 2536) (#("        " 0 1 (fontified nil) 1 8 (fontified nil)) . 2515) (2533 . 2534)) nil (24224 57796 724531 515000) 0 nil]) ((#("r" 0 1 (fontified t ws-butler-chg delete)) . 2533) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 2533) (#("x" 0 1 (fontified t ws-butler-chg delete)) . 2533) (#("_" 0 1 (fontified t ws-butler-chg delete)) . 2533)) nil (24224 57796 724532 746000) 0 nil]) ((2530 . 2533)) nil (24224 57796 724533 983000) 0 nil]) ((#("debug" 0 5 (fontified t)) . 2530) (t 24224 57764 364553 932000)) nil (24224 57796 724534 893000) 0 nil]) ((2505 . 2513)) nil (24224 57764 351825 188000) 0 nil]) ((#("XORING" 0 6 (fontified t ws-butler-chg chg)) . 2505)) nil (24224 57764 351830 367000) 0 nil]) ((nil rear-nonsticky nil 2436 . 2437) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . -2538) (2436 . 2539)) nil (24224 57764 351832 806000) 0 nil]) ((2435 . 2436) 2410) nil (24224 57764 351834 495000) 0 nil]) ((apply -6 1497 1625 undo--wrap-and-run-primitive-undo 1497 1625 ((1571 . 1573) (1525 . 1527) (1497 . 1499))) (t 24224 57708 454426 782000)) nil (24224 57764 351835 492000) 0 nil]) ((2034 . 2035)) nil (24224 57708 441988 221000) 0 nil]) ((2038 . 2041)) nil (24224 57708 441992 894000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -2038) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -2039) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) 2040 (t 24224 57697 734402 349000)) nil (24224 57708 442006 223000) 0 nil]) ((1853 . 1868)) nil (24224 57697 719632 7000) 0 nil]) ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-builtin-face)) . -1853) (undo-tree-id350 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1854) (undo-tree-id351 . -1) 1855) nil (24224 57697 719645 876000) 0 nil]) ((1851 . 1855)) nil (24224 57697 719647 972000) 0 nil]) ((1850 . 1851) 1849) nil (24224 57697 719648 936000) 0 nil]) ((1840 . 1850)) nil (24224 57697 719649 723000) 0 nil]) ((1833 . 1840)) nil (24224 57697 719650 344000) 0 nil]) ((1832 . 1833) 1832) nil (24224 57697 719651 131000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1861) (undo-tree-id352 . -1)) nil (24224 57697 719652 406000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1902) (undo-tree-id353 . -1)) nil (24224 57697 719653 828000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1925) (undo-tree-id354 . -1)) nil (24224 57697 719655 369000) 0 nil] [nil ([nil nil ((#("    inner_counter = 0
    outer_counter += 1
" 0 4 (ws-butler-chg chg fontified t) 4 17 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 17 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg delete fontified t) 23 26 (ws-butler-chg chg fontified t) 26 39 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 39 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t)) . 1903) (undo-tree-id268 . -26) (undo-tree-id269 . -26) (undo-tree-id270 . -22) (undo-tree-id271 . -45) (undo-tree-id272 . -26) (undo-tree-id273 . -39) (undo-tree-id274 . -45) (undo-tree-id275 . -45) (undo-tree-id276 . -45) (undo-tree-id277 . -45) (undo-tree-id278 . -45) (undo-tree-id279 . -45) (undo-tree-id280 . -45) (undo-tree-id281 . -45) (undo-tree-id282 . -45) (undo-tree-id283 . -45) (undo-tree-id284 . -45) (undo-tree-id285 . -45) (undo-tree-id286 . -45) (undo-tree-id287 . -45) (undo-tree-id288 . -45) (undo-tree-id289 . -45) (undo-tree-id290 . -26) (undo-tree-id291 . -26) (undo-tree-id292 . -26) (undo-tree-id293 . -26) (undo-tree-id294 . -26) (undo-tree-id295 . -26) (undo-tree-id296 . -26) (undo-tree-id297 . -26) (undo-tree-id298 . -26) (undo-tree-id299 . -26) (undo-tree-id300 . -26) (undo-tree-id301 . -22) (undo-tree-id302 . -26) (undo-tree-id303 . -22) (undo-tree-id304 . -22) (undo-tree-id305 . -22) (undo-tree-id306 . -22) (undo-tree-id307 . -22) (undo-tree-id308 . -22) (undo-tree-id309 . -22) (undo-tree-id310 . -22) (undo-tree-id311 . -22) (undo-tree-id312 . -22) (undo-tree-id313 . -22) (undo-tree-id314 . -22) (undo-tree-id315 . -22) (undo-tree-id316 . -22) (undo-tree-id317 . -44) (undo-tree-id318 . -22) (undo-tree-id319 . -26) (undo-tree-id320 . -22) (undo-tree-id321 . -26) (undo-tree-id322 . -26) (undo-tree-id323 . -26) (undo-tree-id324 . -26) (undo-tree-id325 . -26) (undo-tree-id326 . -26) (undo-tree-id327 . -26) (undo-tree-id328 . -26) (undo-tree-id329 . -26) (undo-tree-id330 . -26) (undo-tree-id331 . -26) (undo-tree-id332 . -26) (undo-tree-id333 . -26) (undo-tree-id334 . -26) (undo-tree-id335 . -26) (undo-tree-id336 . -26) (undo-tree-id337 . -26) (undo-tree-id338 . -26) (undo-tree-id339 . -26) (undo-tree-id340 . -26) (undo-tree-id341 . -26) (undo-tree-id342 . -26) (undo-tree-id343 . -26) (undo-tree-id344 . -26) (undo-tree-id345 . -26) (undo-tree-id346 . -26) 1929) ((nil ws-butler-chg delete 1948 . 1949) (1903 . 1948)) (24224 57677 709835 797000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1925) (undo-tree-id347 . -1)) ((nil ws-butler-chg delete 1926 . 1927) (1925 . 1926)) (24224 57677 710507 71000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1949) (undo-tree-id348 . -1)) nil (24224 57678 685761 717000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2038) (undo-tree-id349 . -1)) nil (24224 57677 709851 243000) 0 nil] [nil ([nil ([nil nil ((#("def debug_xor(state):
    inner_counter += 1
" 0 3 (ws-butler-chg chg fontified t face font-lock-keyword-face) 3 4 (ws-butler-chg chg fontified t) 4 13 (ws-butler-chg chg fontified t face font-lock-function-name-face) 13 22 (ws-butler-chg chg fontified t) 22 23 (ws-butler-chg delete fontified t) 23 26 (ws-butler-chg chg fontified t) 26 39 (ws-butler-chg chg fontified t face font-lock-variable-name-face) 39 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg chg fontified t)) . 2016) (undo-tree-id63 . -26) (undo-tree-id64 . -26) (undo-tree-id65 . -22) (undo-tree-id66 . -45) (undo-tree-id67 . -45) (undo-tree-id68 . -45) (undo-tree-id69 . -45) (undo-tree-id70 . -45) (undo-tree-id71 . -45) (undo-tree-id72 . -45) (undo-tree-id73 . -45) (undo-tree-id74 . -45) (undo-tree-id75 . -45) (undo-tree-id76 . -45) (undo-tree-id77 . -45) (undo-tree-id78 . -45) (undo-tree-id79 . -45) (undo-tree-id80 . -45) (undo-tree-id81 . -45) (undo-tree-id82 . -45) (undo-tree-id83 . -45) (undo-tree-id84 . -45) (undo-tree-id85 . -45) (undo-tree-id86 . -45) (undo-tree-id87 . -45) (undo-tree-id88 . -45) (undo-tree-id89 . -26) (undo-tree-id90 . -26) (undo-tree-id91 . -26) (undo-tree-id92 . -26) (undo-tree-id93 . -26) (undo-tree-id94 . -26) (undo-tree-id95 . -22) (undo-tree-id96 . -26) (undo-tree-id97 . -22) (undo-tree-id98 . -22) (undo-tree-id99 . -22) (undo-tree-id100 . -22) (undo-tree-id101 . -22) (undo-tree-id102 . -22) (undo-tree-id103 . -22) (undo-tree-id104 . -22) (undo-tree-id105 . -22) (undo-tree-id106 . -22) (undo-tree-id107 . -22) (undo-tree-id108 . -22) (undo-tree-id109 . -22) (undo-tree-id110 . -22) (undo-tree-id111 . -44) (undo-tree-id112 . -26) (undo-tree-id113 . -22) (undo-tree-id114 . -26) (undo-tree-id115 . -26) (undo-tree-id116 . -26) (undo-tree-id117 . -26) (undo-tree-id118 . -26) (undo-tree-id119 . -26) (undo-tree-id120 . -26) (undo-tree-id121 . -22) (undo-tree-id122 . -26) (undo-tree-id123 . -22) (undo-tree-id124 . -22) (undo-tree-id125 . -22) (undo-tree-id126 . -22) (undo-tree-id127 . -22) (undo-tree-id128 . -22) (undo-tree-id129 . -22) (undo-tree-id130 . -22) (undo-tree-id131 . -22) (undo-tree-id132 . -22) (undo-tree-id133 . -22) (undo-tree-id134 . -22) (undo-tree-id135 . -22) (undo-tree-id136 . -22) (undo-tree-id137 . -22) (undo-tree-id138 . -22) (undo-tree-id139 . -22) (undo-tree-id140 . -22) (undo-tree-id141 . -22) (undo-tree-id142 . -22) (undo-tree-id143 . -22) (undo-tree-id144 . -22) (undo-tree-id145 . -22) (undo-tree-id146 . -22) (undo-tree-id147 . -22) (undo-tree-id148 . -22) (undo-tree-id149 . -22) (undo-tree-id150 . -22) (undo-tree-id151 . -22) (undo-tree-id152 . -22) (undo-tree-id153 . -22) (undo-tree-id154 . -22) (undo-tree-id155 . -22) (undo-tree-id156 . -22) (undo-tree-id157 . -22) (undo-tree-id158 . -22) (undo-tree-id159 . -22) (undo-tree-id160 . -22) (undo-tree-id161 . -22) (undo-tree-id162 . -22) (undo-tree-id163 . -22) (undo-tree-id164 . -22) (undo-tree-id165 . -22) (undo-tree-id166 . -22) (undo-tree-id167 . -22) (undo-tree-id168 . -22) (undo-tree-id169 . -22) (undo-tree-id170 . -22) (undo-tree-id171 . -22) (undo-tree-id172 . -22) (undo-tree-id173 . -22) (undo-tree-id174 . -44) (undo-tree-id175 . -22) (undo-tree-id176 . -26) (undo-tree-id177 . -22) (undo-tree-id178 . -26) (undo-tree-id179 . -26) (undo-tree-id180 . -26) (undo-tree-id181 . -26) (undo-tree-id182 . -26) (undo-tree-id183 . -26) (undo-tree-id184 . -26) (undo-tree-id185 . -26) (undo-tree-id186 . -26) (undo-tree-id187 . -26) (undo-tree-id188 . -26) (undo-tree-id189 . -26) (undo-tree-id190 . -26) (undo-tree-id191 . -26) 2042) ((nil ws-butler-chg delete 2061 . 2062) (2016 . 2061)) (24224 57672 62457 187000) 0 nil]) ((#("    global inner_counter
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 10 (ws-butler-chg chg fontified t face font-lock-keyword-face) 10 24 (ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t)) . 2038) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -25) (undo-tree-id195 . -25) (undo-tree-id196 . -25) (undo-tree-id197 . -25) (undo-tree-id198 . -25) (undo-tree-id199 . -25) (undo-tree-id200 . -25) (undo-tree-id201 . -25) (undo-tree-id202 . -25) (undo-tree-id203 . -25) (undo-tree-id204 . -25) (undo-tree-id205 . -25) (undo-tree-id206 . -25) (undo-tree-id207 . -25) (undo-tree-id208 . -25) (undo-tree-id209 . -25) (undo-tree-id210 . -25) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -24) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) 2042) ((nil ws-butler-chg delete 2063 . 2064) (2038 . 2063)) (24224 57672 62918 539000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2038) (undo-tree-id246 . -1)) ((nil ws-butler-chg delete 2039 . 2040) (2038 . 2039)) (24224 57672 991727 166000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2064) (undo-tree-id247 . -1)) nil (24224 57673 402500 432000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2088) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1)) nil (24224 57672 62515 981000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2139) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1)) nil (24224 57672 62522 629000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2160) (undo-tree-id265 . -1)) nil (24224 57672 62524 368000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2266) (undo-tree-id266 . -1)) nil (24224 57672 62525 699000) 0 nil]) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 2376) (undo-tree-id267 . -1)) nil (24224 57672 62526 917000) 0 nil]) ((nil rear-nonsticky nil 2401 . 2402) (nil fontified nil 1833 . 2402) (1833 . 2402)) nil (24224 57672 62528 50000) 0 nil] [nil nil ((nil rear-nonsticky nil 1834 . 1835) (nil fontified nil 1833 . 1835) (1833 . 1835)) ((#("7f" 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil rear-nonsticky nil)) . 1833) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (nil rear-nonsticky t 1834 . 1835)) (24224 57642 222168 124000) 0 nil]) ((1832 . 1833) (t 24224 57572 24114 601000) 1832) nil (24224 57642 223486 132000) 0 nil]) ((1299 . 1303) (1298 . 1300) (#("[" 0 1 (fontified nil ws-butler-chg chg)) . -1298) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (1298 . 1299) (t 24224 57567 774104 823000)) nil (24224 57572 13905 14000) 0 nil]) ((1336 . 1347)) nil (24224 57567 766144 19000) 0 nil]) ((#(")" 0 1 (ws-butler-chg chg fontified t)) . -1336) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . 1) (undo-tree-id45 . -1) 1337) nil (24224 57567 766159 379000) 0 nil]) ((1329 . 1330) (#("<" 0 1 (ws-butler-chg chg fontified t)) . 1329)) nil (24224 57567 766161 750000) 0 nil]) ((1333 . 1335)) nil (24224 57567 766162 709000) 0 nil]) ((#("7f" 0 2 (ws-butler-chg chg fontified t)) . 1333)) nil (24224 57567 766163 343000) 0 nil]) ((#("    init_state.solver.add( c < 0x7f )
" 0 4 (ws-butler-chg chg fontified t) 4 25 (ws-butler-chg chg fontified t) 25 35 (ws-butler-chg chg fontified t) 35 36 (ws-butler-chg chg fontified t) 36 37 (ws-butler-chg chg fontified t) 37 38 (ws-butler-chg delete fontified t)) . 1338) (undo-tree-id46 . -26) (undo-tree-id47 . -26) (undo-tree-id48 . -38) (undo-tree-id49 . 3) (undo-tree-id50 . -34) (undo-tree-id51 . -34) 1364) nil (24224 57567 766167 873000) 0 nil]) ((nil rear-nonsticky nil 1303 . 1304) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -1337) (1299 . 1338) 1298) nil (24224 57567 766169 363000) 0 nil]) ((1327 . 1335) (1326 . 1328) (1325 . 1327) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -1325) (1314 . 1326)) nil (24224 57567 766171 54000) 0 nil]) ((1304 . 1314) (#("init_state" 0 10 (fontified nil ws-butler-chg chg)) . 1304) (1304 . 1314) (#("init" 0 4 (fontified t ws-butler-chg chg)) . -1304) (undo-tree-id52 . -4) 1308) nil (24224 57567 766173 192000) 0 nil]) ((1304 . 1308)) nil (24224 57567 766174 261000) 0 nil]) ((1299 . 1304)) nil (24224 57567 766174 847000) 0 nil]) ((1283 . 1299)) nil (24224 57567 766175 523000) 0 nil]) ((1279 . 1283)) nil (24224 57567 766176 212000) 0 nil]) ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -1279) (undo-tree-id53 . -1) 1280) nil (24224 57567 766177 984000) 0 nil]) ((1279 . 1280)) nil (24224 57567 766178 876000) 0 nil]) ((1279 . 1280) (#("
" 0 1 (fontified t)) . 1279) (undo-tree-id54 . -1) (undo-tree-id55 . 1) (t 24224 57508 657301 991000)) nil (24224 57567 766181 78000) 0 nil]) ((1247 . 1248) (#("{" 0 1 (fontified t face font-lock-string-face)) . 1247) (undo-tree-id38 . 1) (undo-tree-id39 . -1)) nil (24224 57508 646079 479000) 0 nil]) ((1278 . 1279)) nil (24224 57508 646083 581000) 0 nil]) ((1277 . 1278) (t 24224 57497 363942 579000) 1276) nil (24224 57508 646085 156000) 0 nil]) ((1106 . 1107)) nil (24224 57497 353652 852000) 0 nil]) ((1132 . 1133)) nil (24224 57497 353657 607000) 0 nil]) ((1158 . 1159)) nil (24224 57497 353659 239000) 0 nil]) ((1184 . 1185)) nil (24224 57497 353660 439000) 0 nil]) ((1210 . 1211)) nil (24224 57497 353661 364000) 0 nil]) ((1237 . 1238)) nil (24224 57497 353662 134000) 0 nil]) ((1264 . 1265) (t 24224 57461 440526 158000)) nil (24224 57497 353662 963000) 0 nil]) ((1266 . 1267)) nil (24224 57461 429721 317000) 0 nil]) ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -1266) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 1267) nil (24224 57461 429735 381000) 0 nil]) ((#("\"\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face) 1 2 (ws-butler-chg delete fontified t face font-lock-string-face)) . 1267) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1268) nil (24224 57461 429738 701000) 0 nil]) ((#("{" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -1268) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . 1) (undo-tree-id35 . -1) 1269) nil (24224 57461 429742 226000) 0 nil]) ((1261 . 1262) (#("2" 0 1 (ws-butler-chg chg fontified t)) . 1261)) nil (24224 57461 429743 492000) 0 nil]) ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . -1271) (1244 . 1272) 1234) nil (24224 57461 429744 643000) 0 nil]) ((1233 . 1235)) nil (24224 57461 429745 431000) 0 nil]) ((#("0" 0 1 (fontified t)) . -1233) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 1234) nil (24224 57461 429747 250000) 0 nil]) ((1240 . 1241) (#("p" 0 1 (fontified t face font-lock-string-face)) . 1240)) nil (24224 57461 429748 250000) 0 nil]) ((1214 . 1215) (#("p" 0 1 (fontified t face font-lock-string-face)) . 1214)) nil (24224 57461 429749 184000) 0 nil]) ((1188 . 1189) (#("p" 0 1 (fontified t face font-lock-string-face)) . 1188)) nil (24224 57461 429750 186000) 0 nil]) ((1162 . 1163) (#("p" 0 1 (fontified t face font-lock-string-face)) . 1162)) nil (24224 57461 429751 12000) 0 nil]) ((1136 . 1137) (#("p" 0 1 (fontified t face font-lock-string-face)) . 1136) (t 24224 57428 130448 931000)) nil (24224 57461 429751 985000) 0 nil]) ((882 . 883) (#("3" 0 1 (fontified t)) . 882)) nil (24224 57428 120867 680000) 0 nil]) ((1207 . 1208) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 1207)) nil (24224 57428 120873 670000) 0 nil]) ((1181 . 1182) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 1181)) nil (24224 57428 120875 763000) 0 nil]) ((1155 . 1156) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 1155)) nil (24224 57428 120877 318000) 0 nil]) ((1129 . 1130) (#("0" 0 1 (ws-butler-chg chg fontified t)) . 1129)) nil (24224 57428 120878 478000) 0 nil]) ((nil rear-nonsticky nil 1221 . 1222) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -1243) (1217 . 1244) 1196) nil (24224 57428 120880 148000) 0 nil]) ((nil rear-nonsticky nil 1195 . 1196) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -1217) (1191 . 1218) 1170) nil (24224 57428 120881 840000) 0 nil]) ((nil rear-nonsticky nil 1169 . 1170) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -1191) (1165 . 1192) 1144) nil (24224 57428 120883 489000) 0 nil]) ((nil rear-nonsticky nil 1143 . 1144) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -1165) (1139 . 1166) 1118) nil (24224 57428 120885 83000) 0 nil]) ((nil rear-nonsticky nil 1117 . 1118) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . -1139) (1113 . 1140) 1112) nil (24224 57428 120886 687000) 0 nil]) ((1108 . 1113)) nil (24224 57428 120887 856000) 0 nil]) ((1106 . 1108)) nil (24224 57428 120888 649000) 0 nil]) ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1106) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -1107) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1108) nil (24224 57428 120901 447000) 0 nil]) ((1106 . 1108)) nil (24224 57428 120903 35000) 0 nil]) ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1106) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 1107) nil (24224 57428 120905 541000) 0 nil]) ((1105 . 1107)) nil (24224 57428 120906 601000) 0 nil]) ((1103 . 1104) (1102 . 1104) (#("[" 0 1 (ws-butler-chg chg fontified nil)) . -1102) (1092 . 1103)) nil (24224 57428 120907 949000) 0 nil]) ((1088 . 1092) (1088 . 1089) (#("    
" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . 1088) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -5) (undo-tree-id21 . -3) (undo-tree-id22 . -3) 1091) nil (24224 57428 120913 52000) 0 nil]) ((1057 . 1063) (1056 . 1058) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -1056) (1051 . 1057)) nil (24224 57428 120914 920000) 0 nil]) ((1046 . 1051)) nil (24224 57428 120916 85000) 0 nil]) ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -1046) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1047) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 1048) nil (24224 57428 120919 969000) 0 nil]) ((1034 . 1048)) nil (24224 57428 120921 365000) 0 nil]) ((1033 . 1034) 1033) nil (24224 57428 120922 287000) 0 nil]) ((1057 . 1061) (1056 . 1058)) nil (24224 57428 120923 445000) 0 nil]) ((1055 . 1057) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -1055) (1044 . 1056)) nil (24224 57428 120924 892000) 0 nil]) ((1034 . 1044) (#("init_state" 0 10 (fontified nil ws-butler-chg chg)) . 1034) (1034 . 1044) (#("init_" 0 5 (fontified t ws-butler-chg chg)) . -1034) (undo-tree-id27 . -5) 1039) nil (24224 57428 120927 645000) 0 nil]) ((1034 . 1039)) nil (24224 57428 120928 927000) 0 nil]) ((1033 . 1034) 1033) nil (24224 57428 120930 67000) 0 nil]) ((1033 . 1035)) nil (24224 57428 120930 912000) 0 nil]) ((1032 . 1033) 946) nil (24224 57428 120931 958000) 0 nil] [nil nil ((922 . 923) 850) ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 922) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) (24224 57346 556733 284000) 0 nil] [nil nil ((1118 . 1119)) ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 1118) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) (24224 57333 832130 695000) 0 nil]) ((1117 . 1118) (t 24223 48916 869818 15000) 1033) nil (24224 57346 556971 99000) 0 nil]) nil nil (24224 57333 832137 183000) 0 nil] #1# 10352 173 nil)